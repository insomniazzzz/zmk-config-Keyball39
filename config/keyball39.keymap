#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q             &kp W         &kp E     &kp R         &kp T                              &kp Y            &kp U  &kp I      &kp O         &kp P
&kp A             &kp S         &kp D     &kp F         &kp G                              &kp H            &kp J  &kp K      &kp L         &lt 4 SEMI
&mt LEFT_SHIFT Z  &kp X         &kp C     &kp V         &kp B                              &kp N            &kp M  &kp COMMA  &lt 5 PERIOD  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LALT  &lt 6 ESCAPE  &lt 3 TAB  &lt 3 SPACE  &kp ENTER  &lt 2 BACKSPACE                                  &kp RSHFT
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                  &kp COLON     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT     &none                         &kp PERIOD    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none
&none         &none         &none         &none         &none                         &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans                                                  &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                     &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&none            &none        &none     &none       &trans                          &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&kp LEFT_SHIFT   &trans       &trans    &trans      &kp UP                          &kp UNDERSCORE  &kp PLUS       &trans            &trans                &kp NON_US_BACKSLASH
&kp LCTRL        &trans       &trans    &kp LEFT    &kp DOWN     &kp RIGHT  &trans  &trans                                                                 &kp RIGHT_SHIFT
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp F5                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F5  &kp F6   &kp F7   &kp F8   &none                   &none   &none   &none   &none   &kp F11
&kp F9  &kp F10  &kp F11  &kp F12  &none                   &none   &none   &none   &none   &kp F12
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                          &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp N1          &kp N2          &kp N3        &kp N4     &kp N5                  &kp LS(LA(LC(NUMBER_2)))  &kp LC(F1)  &kp LC(F3)  &kp LC(F4)  &kp LC(F5)
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none                   &kp PAGE_UP               &mkp LCLK   &mkp RCLK   &mkp MCLK   &none
&none           &none           &none         &none      &none                   &kp PAGE_DOWN             &none       &none       &none       &none
&none           &trans          &trans        &trans     &trans  &trans  &trans  &mo 3                                                         &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &kp HOME       &kp END    &kp LC(F3)  &kp LC(F4)  &kp LC(F5)
&trans  &trans  &trans  &trans  &trans                  &kp PG_UP      &mkp LCLK  &mkp RCLK   &mkp MCLK   &trans
&trans  &trans  &trans  &trans  &trans                  &kp PAGE_DOWN  &trans     &trans      &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&bt BT_SEL 0              &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &kp LC(LS(NUMBER_2))  &kp LS(LC(NUMBER_3))  &kp LS(LC(NUMBER_4))  &kp LS(LC(N5))  &trans
&trans                    &trans        &trans        &trans        &trans                        &trans                &trans                &trans                &trans          &trans
&kp LC(LA(LS(NUMBER_2)))  &kp LC(F1)    &kp LC(F3)    &kp LC(F4)    &kp LC(F5)                    &kp LC(LS(N))         &trans                &trans                &trans          &trans
&trans                    &trans        &trans        &trans        &trans        &trans  &trans  &kp DELETE                                                                        &trans
            >;
        };

        shortcut {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
